
//: FILE[ X64.W10._ ]( 64Bit Code, Windows10 )
#define LIB JOHN_MARK_ISAAC_MADISON_S_PEBWALK_WIN10_X64 ////////
#define FN( name ) LIB##name

//: Objective/Goal:
//: Get function pointers to GetProcAddressA() & LoadLibraryA()
//: without polluting your code base with window's specific
//: types and headers. Be as lean as possible, so complete
//: task with ZERO dependencies on other library code.

    //|¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯|//
    //|                                                      |//
    //| DIAGRAM:                                             |//
    //|     PE File Format:                                  |//
    //| SOURCE:                                              |//
    //|     blog.kowalczyk.info/articles/pefileformat.html   |//
    //|                                                      |//
    //| PE_File[ - ]                                         |//
    //|          |                                           |//
    //|          +-- MS-DOS MZ Header                        |//
    //|          +-- MS-DOS Real_Mode Stub Program           |//
    //|          +-- PE File Signature                       |//
    //|          +-- PE File Header                          |//
    //|          +-- PE File Optional Header                 |//
    //|          +-- .text  Section Header                   |//
    //|          +-- .bss   Section Header                   |//
    //|          +-- .rdata Section Header                   |//
    //|          |                                           |//
    //|          ...                                         |//
    //|          |                                           |//
    //|          +-- .debug Section Header                   |//
    //|          +-- .text  Section                          |//
    //|          +-- .bss   Section                          |//
    //|          +-- .rdata Section                          |//
    //|          |                                           |//
    //|          ...                                         |//
    //|          |                                           |//
    //|          +-- .debug Section                          |//
    //|                                                      |//
    //|______________________________________________________|//

    //: MS-DOS MZ Header:
    //: -----------------------------------------------------://
    //: For backwards compatibility. If you try to run a 
    //: windows NT program on ancient MS-DOS, you will be 
    //: greeted with:
    //:
    //: "This program cannot be ran in DOS mode" 
    //: 
    //:instead of the useless:
    //:
    //: " The name specified is not recognized as an     "
    //: " internal or external command, operable program "
    //: " or batch file.                                 "
    //: -----------------------------------------------------://



//:This struct contains relative offsets to different 
//:pieces of data so that we can extract what we need
//:without any header files. Effectively, we have only
//:the data members we care about here.
struct PEBWALK_WIN10_X64 {
                                            
    //: H: hex number - - - - - - - - - - - /////////////////://
    //: A: address    - - - - - - - - - - - /////////////////://
    //: S: struct     - - - - - - - - - - - /////////////////://
    #define H unsigned long long int        //://////////////://
    #define A void*    //:- - - - - - - - - /////////////////://
    #define S( name ) struct LIB ## name    //://////////////://

    S( PE_FILE_SIGNATURE_CODES ){

        IMAGE_DOS_SIGNATURE          ; //: 0x5A4D     : MZ
        IMAGE_OS2_SIGNATURE          ; //: 0x454E     : NE
        IMAGE_OS2_SIGNATURE_LE       ; //: 0x454C     : LE
        IMAGE_NT_SIGNATURE           ; //: 0x00004550 : PE00
        
    }  PE_FILE_SIGNATURE_CODES       ;
    S( IMAGE_DATA_DIRECTORY ){

        A   virtual_address          ; //: VirtualAddress
        
    }IMAGE_DATA_DIRECTORY            ;
    S( IMAGE_OPTIONAL_HEADER ){

        A   data_directory           ; //: DataDirectory

    }IMAGE_OPTIONAL_HEADER           ;
    S( IMAGE_EXPORT_DIRECTORY ){

        A   address_of_functions     ; //: AddressOfFunctions   
        A   address_of_names         ; //: AddressOfNames       
        A   address_of_name_ordinals ; //: AddressOfNameOrdinals
        A   number_of_names          ; //: NumberOfNames   
     
    }IMAGE_EXPORT_DIRECTORY;
    S( LIST_ENTRY ){

        A   f_link                   ; //: Flink

    } LIST_ENTRY                     ;
    S( LDR_DATA_TABLE_ENTRY ){
            
        A   reserved_2               ; //:Reserved2[ 0 ]
        
        S( LDR_DATA_TABLE_ENTRY_dot_FullDllName ){

            A   base_address         ;
            A   buffer               ; //: Buffer

        }FullDllName                 ;
    }LDR_DATA_TABLE_ENTRY            ;
    S( IMAGE_NT_HEADERS ){

        A   optional_header          ; //: OptionalHeader

    }  IMAGE_NT_HEADERS;
    S( IMAGE_DOS_HEADER ){

        A   e_lfanew                 ; //: e_lfanew

    }  IMAGE_DOS_HEADER;

    

    #undef  H  /////////////////////////////////////////////////
    #undef  A  /////////////////////////////////////////////////
    #undef  S  /////////////////////////////////////////////////
};

void*
FN( GetBaseAddressOf_PEB ){

    void* base_address = 0;
    unsigned long long var_out = 0;

    __asm__(
        " movq %%gs:0x60, %[sym_out]  ; \n\t"
        :[sym_out] "=r"  (var_out) //:OUTPUTS
    );

    base_address=(void*)var_out;
    return( base_address );
}

////////////////////////////////////////////////////////////////
//: ABOVE: CODE
//: BELOW: NOTES / COMMENTS
////////////////////////////////////////////////////////////////

//| 0x00: IMAGE_DATA_DIRECTORY    . VirtualAddress           |//
//| 0x70: IMAGE_OPTIONAL_HEADER   . DataDirectory            |//
//| 0x1C: IMAGE_EXPORT_DIRECTORY  . AddressOfFunctions       |//
//| 0x20: IMAGE_EXPORT_DIRECTORY  . AddressOfNames           |//
//| 0x24: IMAGE_EXPORT_DIRECTORY  . AddressOfNameOrdinals    |//
//| 0x18: IMAGE_EXPORT_DIRECTORY  . NumberOfNames            |//
//| 0x18: IMAGE_NT_HEADERS        . OptionalHeader           |//
//| 0x3C: IMAGE_DOS_HEADER        . e_lfanew                 |//
//| 0x00: LIST_ENTRY              . Flink                    |//
//| 0x20: LDR_DATA_TABLE_ENTRY    .Reserved2[0]              |//
//|                                                          |//
//| 0x48: LDR_DATA_TABLE_ENTRY    .FullDllName               |//
//| 0x08:                          FullDllName.Buffer        |//
//|                                                          |//
//| 0x18: PEB.Ldr                                            |//
//| 0x20:     Ldr.InMemoryOrderModuleList                    |//
//| 0x00:         InMemoryOrderModuleList.Flink              |//



    //[ e_lfanew : File address of new exe header            ]//
    //|A 4-byte offset into the file where the PE file header|//
    //|is located. It is necessary to use this offset to     |//
    //|locate the PE header in the file. For PE files in     |//
    //|Windows NT,the PE file header occurs soon after the   |//
    //|MS-DOS header with only the real-mode stub program    |//
    //|between them.                                         |//

    //[ DataDirectory / data_directory --------------------- ]//
    //| typedef struct _IMAGE_OPTIONAL_HEADER {              |//
    //|     ...                                              |//
    //|     IMAGE_DATA_DIRECTORY                             |//
    //|     DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES]; |//
    //|     ...                                              |//
    //| } IMAGE_OPTIONAL_HEADER, *PIMAGE_OPTIONAL_HEADER;    |//


    //: Did NOT use this in my original pebwalk. But is
    //: mentioned in "kowalczyk"('s) blog.
    //:
    //: typedef struct _IMAGE_FILE_HEADER {
    //:     USHORT  Machine;
    //:     USHORT  NumberOfSections;
    //:     ULONG   TimeDateStamp;
    //:     ULONG   PointerToSymbolTable;
    //:     ULONG   NumberOfSymbols;
    //:     USHORT  SizeOfOptionalHeader;
    //:     USHORT  Characteristics;
    //: } IMAGE_FILE_HEADER, *PIMAGE_FILE_HEADER;


#undef  LIB ////////////////////////////////////////////////////
#undef   FN ////////////////////////////////////////////////////